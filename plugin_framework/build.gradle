apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided project(':plugin_sdk')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    testCompile 'junit:junit:4.12'
}

ext {
    output_jar_name = "framework.jar"
}

task debug_jar_to_dex(type: Exec) {
    workingDir '.'

    def jar_path = "build/intermediates/bundles/debug/classes.jar"

    def dx_path = "${rootProject.sdk_dir}".replace("\\", "/") + "/build-tools/android-4.4.2/dx.bat"

    def cmd_jar_to_dex = [
            dx_path, "--dex", "--output=" + output_jar_name, jar_path
    ]

    println ("debug_jar_to_dex...")
    commandLine cmd_jar_to_dex
}

task release_jar_to_dex(type: Exec) {
    workingDir '.'

    def jar_path = "build/intermediates/bundles/default/classes.jar"

    def dx_path = "${rootProject.sdk_dir}".replace("\\", "/") + "/build-tools/android-4.4.2/dx.bat"

    def cmd_jar_to_dex = [
            dx_path, "--dex", "--output=" + output_jar_name, jar_path
    ]

    println ("release_jar_to_dex...")
    commandLine cmd_jar_to_dex
}

afterEvaluate {
    tasks.matching {
        // 点击菜单 Build->Build APK，通过Gradle Console查看日志，最后一步会执行 assemblexxx 任务
        it.name.startsWith('assembleDebug') || it.name.startsWith('assembleRelease')
    }.each { task ->
        task.doLast {
            if (it.name.contains("Debug")) {
                debug_jar_to_dex.execute()
            } else if (it.name.contains("Release")) {
                release_jar_to_dex.execute()
            }
        }
    }
}
